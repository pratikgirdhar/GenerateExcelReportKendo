<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <title>Kendo UI Snippet</title>

    <link href="https://kendo.cdn.telerik.com/2020.1.114/styles/kendo.common.min.css" rel="stylesheet">
    <link href="https://kendo.cdn.telerik.com/2020.1.114/styles/kendo.metro.min.css" rel="stylesheet">
    <link href="https://kendo.cdn.telerik.com/2020.1.114/styles/kendo.metro.mobile.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2020.1.219/js/jszip.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2020.1.219/js/kendo.all.min.js"></script>
</head>
<body>
        <div id="toolbar"></div>
        <div><ul id="panels">
        <div class="header">Click on "Export to Excel Button" to Generate Quaterly Beazley Report</div>
      </ul>
 </div>
  <!--End of Panel-->
        <button id="export" class="k-button"><span class="k-icon k-i-excel"></span>Export to Excel</button>
         
        <div id="tabstrip">  <!-- Created Tabstrip that will be load different views-->
        <ul>
          <li class="k-state-active" id="tab1">Complex</li>
          <li id="tab2">Portfolio</li>
          <li id="tab3">Crime</li>
          <li id="tab4">Closed</li>
        </ul>
        <div><div id="grid"></div></div>
        <div><div id="grid1"></div></div>
        <div><div id="grid2"></div></div>
        <div><div id="grid3"></div></div>
        
      </div>
      <style>
          #panels
            {
                margin-left: 20px;
                text-align: center;
                font-size: x-large;
                color: red
            }
          .ms-core-pageTitle {
    font-size: 2.77em;
    white-space: nowrap;
    display: none;
}
.ms-breadcrumb-top {
    white-space: nowrap;
    display: none;
}
.ms-webpartPage-root {
    border-spacing: 2px; 
}
#contentRow {
     padding-top: 1px; 
}
.ms-verticalAlignTop {
    vertical-align: top;
    display: none;
}
#sideNavBox{
    display: none;
}
#contentBox{
    margin-left:0px;
    margin-right:0px;
}

#s4-titlerow{ 
    display: none !important;
}

.k-grid-header, .k-grid-header .k-header {
      background-color: #391849;
      color: white
}
.k-grid-header th.k-header>.k-link{ 
color: lavenderblush;
font-weight: bold;
}
.k-grid .k-button, .k-grid .k-grid-toolbar>*{
    color:red;
}
.k-toolbar.k-toolbar-resizable {
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
    background-color: #391849;
}
.red{ background-color: red;color: white}
  /* Adding Page Additional hide CSS, Remove if not required */
  button.o365button.o365cs-nav-item.o365cs-nav-button.o365cs-navMenuButton.ms-bgc-tdr-h.ms-bgc-tp.o365cs-newAL-off {
    
    display: none;
}

div.ms-cui-topBar2 {
    display: none;
}
.o365cs-nav-header16 .o365cs-nav-o365Branding {
    
    display: none;
}

      </style>
<script>
//toolbar
$("#toolbar").kendoToolBar({
        items: [
        {
            type: "button",
            text: "Home",
            click: function(e) {
                //alert(e.target.text() + " is clicked");
                window.open('http://labsp16app:2101/beazley/SiteAssets/NewMatterIntake.aspx','_self')
            }
          
          
        },
        {
            type: "button",
            text: "Incomplete Summaries (Associates)",
            click: function(e) {
                //alert(e.target.text() + " is clicked");
                window.open('http://labsp16app:2101/beazley/SiteAssets/PAMatter.aspx','_self')
            }
          
          
        },
        {
            type: "button",
            text: "Pending Final Review (Partners)",
            click: function(e) {
                //alert(e.target.text() + " is clicked");
                window.open('http://labsp16app:2101/beazley/SiteAssets/PPMatter.aspx','_self')
            }
          
          
        },
          {
            type: "button",
            text: "Complex",
            
            click: function (e) {
              // alert(e.target.text() + " is clicked");
              window.open('http://labsp16app:2101/beazley/SiteAssets/ComplexMatter.aspx', '_self')
                 
            },
          
          
          },
          {
            type: "button",
            text: "Crime",
           
            click: function (e) {
              // alert(e.target.text() + " is clicked");
              window.open('http://labsp16app:2101/beazley/SiteAssets/CrimeMatter.aspx','_self')
              
            },
          
          
          },
          {
            type: "button",
            text: "Portfolio",
            
            click: function (e) {
              // alert(e.target.text() + " is clicked");
              window.open('http://labsp16app:2101/beazley/SiteAssets/PortfolioMatter.aspx','_self')
                
            },
          
          
          },
         
          {
            type: "button",
            text: "Closed",
            
            click: function (e) {
              // alert(e.target.text() + " is clicked");
              window.open('http://labsp16app:2101/beazley/SiteAssets/ClosedMatter.aspx','_self')
              
            },
          
          
          },
          {
            type: "button",
            text: "Generate Report",
            attributes: {"class": "red"},
            click: function (e) {
              // alert(e.target.text() + " is clicked");
              location.reload();
            },
          
          
          },
          
        ]
    });




//toolbarend

  // used to sync the exports
  var promises = [
    $.Deferred(),
    $.Deferred(),
    $.Deferred(),
    $.Deferred(),
  ];

  $("#export").click(function(e){
    // trigger export of the products grid
    $("#grid").data("kendoGrid").saveAsExcel();
    // trigger export of the orders grid
    $("#grid1").data("kendoGrid").saveAsExcel();
    // trigger export for complex grid
    $("#grid2").data("kendoGrid").saveAsExcel();
    $("#grid3").data("kendoGrid").saveAsExcel();
    // wait for both exports to finish

    $.when.apply(null, promises)
     .then(function(productsWorkbook, ordersWorkbook,contososWorkbook,northwindsWorkbook) {

      // create a new workbook using the sheets of the products and orders workbooks
      var sheets = [
        productsWorkbook.sheets[0],
        ordersWorkbook.sheets[0],
        contososWorkbook.sheets[0],
        northwindsWorkbook.sheets[0],
      ];

      sheets[0].title = "Complex";
      sheets[1].title = "Portfolio";
      sheets[2].title ="Crime";
      sheets[3].title="Closed";
      var workbook = new kendo.ooxml.Workbook({
        sheets: sheets
   

      });
      

      // save the new workbook,b
      kendo.saveAs({
        dataURI: workbook.toDataURL(),
        fileName: "GenerateBeazleyReport.xlsx"
      })
    });
  });

$(document).ready(function() {  
    var tabstrip = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
    getGrid1();  
    getGrid2();
    getGrid3();
    getGrid4();
});  
function getGrid1() { 
$.ajax({ 
   method: 'GET', 
   url: "http://labsp16app:2101/Beazley/_api/web/lists/getbytitle('BBList')/items?&$select=ID,Title,MatterName,Claim,ClaimNumber,Claimant,ClaimSummary,MatterDevelopments,CoverageStatus,DateofDiscovery,DateofNotice,DefenseReserve,PotentialExposure,WRFeeReserve,ClosureDate,PolicyNumber,AssignmentType,Division,Limit,ULLimit,Retention,Vector,PolicyType,Fraudulent,ClassAction,OCR,Amount,Filed,Deadline,Submitted,SettlementReserve,SummaryComplete,SummaryFinalized,PolicyStartPeriod,PolicyEndPeriod,ClaimManager&$expand=Partner&$select=Partner/UserName,Partner/FirstName,Partner/LastName&$expand=Associate&$select=Associate/UserName,Associate/FirstName,Associate/LastName&$filter=(SaveButtonClicked eq 1) and (AssignmentType eq 'Complex')&$top=5000", 
   headers: { 
       "accept": "application/json;odata=verbose",
       "content-type": "application/json;odata=verbose",
   },
    success: mySuccHandler,
   error: myErrHandler
});

function mySuccHandler(response) {
console.log(response);

try{
 // tabstrip to kendo page.
$("#grid").kendoGrid({
dataSource: {
   data: response.d.results,
  
  // pageSize: 20,
   

schema:{
   


   model: {
      id:"Title",
       fields:{
          
          Title: {type:"string"},
          MatterDescription: {type:"string"},
          DateofNotice: {type:"date"},
          PolicyStartPeriod: {type:"date"},
          PolicyEndPeriod: {type:"date"},
              
       }
   }
},
},

//filterable:true,
//sortable: true,
//groupable: true,
pageable: true,
excelExport: function(e) {
    // Add header 
    var rows = e.workbook.sheets[0].rows;
    rows.unshift({
    	cells: [ { value: "Claim", background: "#ff0000", colSpan: 2, textAlign: "center" },
                {  value: "Policy Information", background: "#ff0000", colSpan: 9, textAlign: "center"},
              {value: "Summary/Status", background: "#ff0000", colSpan: 2, textAlign: "center" },
              {value: "Classification", background: "#ff0000", colSpan: 2, textAlign: "center" },
              {value: "Assignment", background: "#ff0000", colSpan: 4, textAlign: "center" }
             
             ]
    });
    //End Header
    //row color 
    var sheet = e.workbook.sheets[0];
    // Add to freeze pane
    
     //Add big header
    sheet.frozenRows = 3;
   
    sheet.mergedCells = ["A1:S1"];

    /* // Alternate row color formatting.
    for (var rowIndex = 1; rowIndex < sheet.rows.length; rowIndex++) {
            if (rowIndex % 2 == 0) {
              var row = sheet.rows[rowIndex];
              for (var cellIndex = 0; cellIndex < row.cells.length; cellIndex ++) {
                row.cells[cellIndex].background = "#aabbcc";
              }
            }
          }*/
    
          var myHeaders = [{
                    value:"Beazley-TMB-COMPLEX QUATERLY UPDATES",
                    fontSize: 30,
                    textAlign: "center",
                    //background:"#60b5ff",
                    color:"#391849",
                    
                  }];
                  sheet.rows.splice(0, 0, { cells: myHeaders, type: "header", height: 70});
                  // End Big Header
    //end
    e.preventDefault();

    promises[0].resolve(e.workbook);
    
  },
batch:true,
navigatable:true,
selectable: true,
columns : [
    {
     field: "ID",
     title: "SharePoint ID",
     hidden:true,
},
    
    
            {
            field:"Claim",
            title:"Assured",
            width:75,
            
            },
            {
                field:"Claimant",
                title:"Claimant",
                width: 75
            },
            {
             field:"ClaimNumber",
             title:"Claim Number",
             width: 75
            },
            {
              field:"PolicyNumber",
              title:"Policy Number",
              width: 75
            },
            
            {
                field:"PolicyStartPeriod",
                title: "PolicyStartDate",
                width: 75
            },
            {
                field:"PolicyEndPeriod",
                title:"PolicyEndDate",
                width: 75
            },
    {
      field: "Division",
      title: "Division",
      width: 75

    },
    {
        field: "Limit",
        title: "Limit",
        width: 75
    },
    {
    field: "ULLimit",
    title: "UL/Limit",
    width: 75
    },
    {
        field:"Retention",
        title:"Retention",
        width: 75
    },
    {
        field: "DateofNotice",
        title: "Date of Notice",
        template: '#= kendo.toString(kendo.parseDate(DateofNotice), "MM/dd/yyyy")#',
        width: 75
    },
   
            {
        field: "CoverageStatus",
        title:"Coverage Status",
        width: 200
    },
    {
        field: "MatterDevelopments",
        title:"Matter Development",
        width: 200
    },
    {
        field:"Vector",
        title:"Vector",
       width: 75

    },
    {
        field:"PolicyType",
        title:"PolicyType",
        width: 75
    },
    { 
            field:"Partner.FirstName",
            title:"WR Sr.Partner",
            width: 75
}, 
{ 
            field:"Associate.FirstName",
            title:"WR/Associate",
            width: 75
}, 
{
            field:"Title",
            title:"WR Matter Number",
           // template: '#= kendo.parseInt(Title) #',
            width: 75
},
{
            field: "ClaimManager",
            title: "Claim Manager",
            width: 75
},
   
            
    
    {
        field:"ClaimSummary",
        title: "Claim Summary",
        hidden: true,
    },
    
       

{
    field:"ClaimSummary",
    title:"Claim Summary",
    hidden: true,
}
],
});


}
catch(e){
alert(e.message);
}

}
function myErrHandler(data, errMessage) {    
alert("Error: " + errMessage);    
}
tabstrip.one("activate", function() {
 grid.resize();
  });
}
getGrid2();
//next grid
function getGrid2() { 
    $.ajax({ 
       method: 'GET', 
       url: "http://labsp16app:2101/Beazley/_api/web/lists/getbytitle('BBList')/items?&$select=ID,Title,MatterName,Claim,ClaimNumber,Claimant,PolicyNumber,PolicyStartPeriod,PolicyEndPeriod,Limit,ULLimit,Retention,DateofNotice,CoverageStatus,ClaimSummary,MatterDevelopments,ClaimManager,ClassAction,Fraudulent,OCR,Amount,Filed,Deadline,SettlementReserve,DateofDiscovery,DateofNotice,DefenseReserve,PotentialExposure,WRFeeReserve,ClosureDate,Division,Vector,PolicyType,Fraudulent,ClassAction,OCR,Amount,Filed,Deadline,Submitted,SettlementReserve,SummaryComplete,SummaryFinalized,ClosureDate,DefenseReserve,WRFeeReserve,Submitted,ClaimManager&$expand=Partner&$select=Partner/UserName,Partner/FirstName,Partner/LastName&$expand=Associate&$select=Associate/UserName,Associate/FirstName,Associate/LastName&$filter=(SaveButtonClicked eq 1) and (AssignmentType eq 'Portfolio')&$top=5000", 
       headers: { 
           "accept": "application/json;odata=verbose",
           "content-type": "application/json;odata=verbose",
       },
        success: mySuccHandler,
       error: myErrHandler
    });
    
    function mySuccHandler(response) {
    console.log(response);
    
    try{
     // tabstrip to kendo page.
    $("#grid1").kendoGrid({
    dataSource: {
       data: response.d.results,
      
      // pageSize: 20,
       
    
    schema:{
       
    
    
       model: {
          id:"Title",
          fields:{
          
          Title: {type:"string"},
          MatterDescription: {type:"string"},
          DateofNotice: {type:"date"},
          PolicyStartPeriod: {type:"date"},
          PolicyEndPeriod: {type:"date"},
          Deadline: {type:"date"},
          ClosureDate: {type:"date"},
          DateofDiscovery: {type:"date"},
          Submitted: {type:"date"},
              
       }
       }
    },
    },
    
    filterable:true,
    sortable: true,
    groupable: true,
    pageable: true,
    excelExport: function(e) {
        var rows = e.workbook.sheets[0].rows;
    rows.unshift({
    	cells: [ { value: "Claim", background: "#ff0000", colSpan: 3, textAlign: "center" },
                {  value: "Policy Information", background: "#ff0000", colSpan: 6, textAlign: "center"},
              {value: "Summary/Status", background: "#ff0000", colSpan: 9, textAlign: "center" },
              {value: "Proof of Loss", background: "#ff0000", colSpan: 3, textAlign: "center" },
              {value: "Classification", background: "#ff0000", colSpan: 3, textAlign: "center" },
              {value: "Assignment", background: "#ff0000", colSpan: 5, textAlign: "center" }
             
             ]
    });
     
    //row color 
    var sheet = e.workbook.sheets[0];
    // Add to freeze pane
    sheet.frozenRows = 3;
     //Add big header
     sheet.mergedCells = ["A1:AC1"];
        //Auto Width End


      /*  //row color 
    var sheet = e.workbook.sheets[0];
    for (var rowIndex = 1; rowIndex < sheet.rows.length; rowIndex++) {
            if (rowIndex % 2 == 0) {
              var row = sheet.rows[rowIndex];
              for (var cellIndex = 0; cellIndex < row.cells.length; cellIndex ++) {
                row.cells[cellIndex].background = "#aabbcc";
              }
            }
          }
    */
    var myHeaders = [{
                    value:"Beazley-TMB-PORTFOLIO QUATERLY UPDATES",
                    fontSize: 30,
                    textAlign: "center",
                   // background:"#60b5ff",
                    color:"#391849",
                    
                  }];
                  sheet.rows.splice(0, 0, { cells: myHeaders, type: "header", height: 70});
                  // End Big Header
    
    //end
        e.preventDefault();
  
        promises[1].resolve(e.workbook);
        
      },
    batch:true,
    navigatable:true,
    selectable: true,
    columns : [
        
        
        
    {
     field: "ID",
     title: "SharePoint ID",
     hidden: true
    
},
    
    
            {
            field:"Claim",
            title:"Assured",
            width: 75
            },
            {
                field:"Claimant",
                title:"Claimant",
                width: 75
            },
            {
             field:"ClaimNumber",
             title:"Claim Number",
             width: 75
            },
            {
              field:"PolicyNumber",
              title:"Policy Number",
              width: 75
            },
            
            {
                field:"PolicyStartPeriod",
                title: "PolicyStartDate",
                width: 75
            },
            {
                field:"PolicyEndPeriod",
                title:"PolicyEndDate",
                width: 75
            },
    
    {
        field: "Limit",
        title: "Limit",
        width:50
        
    },
    {
    field: "ULLimit",
    title: "UL/Limit",
    width: 50
    
    },
    {
        field:"Retention",
        title:"Retention",
        width:75
        
    },
    { 
    field: "Division",
    title: "Division",
    width: 75
    },
    {
        field: "DateofDiscovery",
        title: "Date of Discovery",
        width: 75,
        template: '#= kendo.toString(kendo.parseDate(DateofDiscovery), "MM/dd/yyyy")#',
    },

    {
        field: "DateofNotice",
        title:"DateofNotice",
        width: 75,
        template: '#= kendo.toString(kendo.parseDate(DateofNotice), "MM/dd/yyyy")#',
    },
    {
        field: "PotentialExposure",
        title: "Potential Exposure",
        width: 75
    },

   
    
    {
        field:"ClaimSummary",
        title: "Claim Summary",
        width: 200
        
    },
    {
        field: "CoverageStatus",
        title:"Coverage Status",
        width: 200
    },
    {
        field: "MatterDevelopments",
        title:"Matter Development",
        width: 200
    },
    {
        field: "WRFeeReserve",
        title: "WR Fee Reserve",
        width: 75
    },
    {
         field: "DefenseReserve",
         title: "Defense Reserve",
         width: 75
    },
    {
        field: "SettlementReserve",
        title: "Settlement/ Indemnity Reserve",
        width: 75
    },
    {
        field: "Submitted",
        title: "Submitted",
        template: '#= kendo.toString(kendo.parseDate(Submitted), "MM/dd/yyyy")#',
        width:75

    },
    {
    field: "Amount",
    title:"Amount",
    width: 75
},
{
    field: "Deadline",
    title:"Deadline",
    template: '#= kendo.toString(kendo.parseDate(Deadline), "MM/dd/yyyy")#',
    width:75
},
{
    field: "ClassAction",
    title:"ClassAction",
    width: 75
},
{

field: "OCR",
title: "OCR/ AG Investigation",
width: 75
},
{
    field:"Fraudulent",
    title:"Fradulent Instruction",
    width: 75
},
{ 
            field:"Partner.FirstName",
            title:"WR Sr.Partner",
            width: 75
}, 
   
        { 
            field:"Associate.FirstName",
            title:"WR/Associate",
            width: 75
}, 
{
    field: "Title",
    title: "Matter Number",
    width: 75,
},

{
    field: "ClaimManager",
    title:"ClaimManager",
    width: 75
},




{
    field: "Filed",
    title:"Filed",
    hidden: true,
},




    ],
    });
    
    }
    catch(e){
    alert(e.message);
    }
    getGrid3();
    }
    function myErrHandler(data, errMessage) {    
    alert("Error: " + errMessage);    
    }
    tabstrip.one("activate", function() {
        grid1.resize();
      });
    }
    //next grid
    function getGrid3() { 
    $.ajax({ 
       method: 'GET', 
       url: "http://labsp16app:2101/Beazley/_api/web/lists/getbytitle('BBList')/items?&$select=ID,Title,MatterName,Claim,ClaimNumber,PolicyNumber,Limit,ULLimit,Retention,Division,DateofNotice,PotentialExposure,ClaimSummary,MatterDevelopments,CoverageStatus,Submitted,Amount,Deadline,Fraudulent,PolicyStartPeriod,PolicyEndPeriod,ClaimManager&$expand=Partner&$select=Partner/UserName,Partner/FirstName,Partner/LastName&$expand=Associate&$select=Associate/UserName,Associate/FirstName,Associate/LastName&$filter=(SaveButtonClicked eq 1) and (AssignmentType eq 'Crime')&$top=5000", 
       headers: { 
           "accept": "application/json;odata=verbose",
           "content-type": "application/json;odata=verbose",
       },
        success: mySuccHandler,
       error: myErrHandler
    });
    
    function mySuccHandler(response) {
    console.log(response);
    
    try{
     // tabstrip to kendo page.
    $("#grid2").kendoGrid({
    dataSource: {
       data: response.d.results,
      
      // pageSize: 20,
       
    
    schema:{
       
    
    
       model: {
          id:"Title",
          fields:{
          
          Title: {type:"string"},
          MatterDescription: {type:"string"},
          DateofNotice: {type:"date"},
          PolicyStartPeriod: {type:"date"},
          PolicyEndPeriod: {type:"date"},
          Submitted:{type:"date"}, 
          Deadline:{type:"date"},  
       }
       }
    },
    },
    
    filterable:true,
    sortable: true,
    groupable: true,
    pageable: true,
    excelExport: function(e) {
     //row color 
    var sheet = e.workbook.sheets[0];
    for (var rowIndex = 1; rowIndex < sheet.rows.length; rowIndex++) {
            if (rowIndex % 2 == 0) {
              var row = sheet.rows[rowIndex];
              for (var cellIndex = 0; cellIndex < row.cells.length; cellIndex ++) {
                row.cells[cellIndex].background = "#aabbcc";
              }
            }
          }
    
    
    
    //end

        e.preventDefault();
  
        promises[2].resolve(e.workbook);
      },
    batch:true,
    navigatable:true,
    selectable: true,
    columns : [
        
        
        
    {
     field: "ID",
     title: "SharePoint ID",
    
},
    
    
            {
            field:"Claim",
            title:"Assured",
            },
            {
             field:"ClaimNumber",
             title:"Claim Number",
            },
            {
              field:"PolicyNumber",
              title:"Policy Number",
            },
            
            {
                field:"PolicyStartPeriod",
                title: "PolicyStartDate"
            },
            {
                field:"PolicyEndPeriod",
                title:"PolicyEndDate",
            },
    {
      field: "Division",
      title: "Division",
      

    },
    {
        field: "Limit",
        title: "Limit",
        
    },
    {
    field: "ULLimit",
    title: "UL/Limit",
    
    },
    {
        field:"Retention",
        title:"Retention",
        
    },
   
    {
       field:"DateofNotice",
       title:"DateofNotice",
    },
    {
        field:"PotentialExposure",
        title:"PotentialExposure",
    },
    
    {
        field:"ClaimSummary",
        title: "Claim Summary",
        
    },
    {
        field: "MatterDevelopments",
        title:"Matter Development",
        
    },
    {
        field: "CoverageStatus",
        title:"Coverage Status",
        
    },
        { 
            field:"Associate.FirstName",
            title:"WR/Associate"
}, 
{ 
            field:"Partner.FirstName",
            title:"WR Sr.Partner"
}, 
{
    field:"Submitted",
    title:"Submitted",
},
{
    field:"Amount",
    title:"Amount",
},
{
    field:"Deadline",
    title:"Deadline",

},
{
    field:"Fraudulent",
    title:"Fraudulent",
},
{
   field:"ClaimManager",
   title:"ClaimManager",
},
    ],
    });
    
    }
    catch(e){
    alert(e.message);
    }
    getGrid4();
    }
    function myErrHandler(data, errMessage) {    
    alert("Error: " + errMessage);    
    }
    tabstrip.one("activate", function() {
        grid2.resize();
      });
    }
    // next grid4
    function getGrid4() { 
    $.ajax({ 
       method: 'GET', 
       url: "http://labsp16app:2101/Beazley/_api/web/lists/getbytitle('BBList')/items?&$select=ID,Title,MatterName,Claim,Claimant,ClaimNumber,PolicyNumber,PolicyStartPeriod,PolicyEndPeriod,Limit,ULLimit,Retention,Division,ClosureDate,ClaimManager&$expand=Partner&$select=Partner/UserName,Partner/FirstName,Partner/LastName&$expand=Associate&$select=Associate/UserName,Associate/FirstName,Associate/LastName&$filter=(SaveButtonClicked eq 1) and (ClosureDate ne null)&$top=5000", 
       headers: { 
           "accept": "application/json;odata=verbose",
           "content-type": "application/json;odata=verbose",
       },
        success: mySuccHandler,
       error: myErrHandler
    });
    
    function mySuccHandler(response) {
    console.log(response);
    
    try{
     // tabstrip to kendo page.
    $("#grid3").kendoGrid({
    dataSource: {
       data: response.d.results,
      
      // pageSize: 20,
       
    
    schema:{
       
    
    
       model: {
          id:"Title",
          fields:{
          
          Title: {type:"string"},
          MatterDescription: {type:"string"},
          ClosureDate: {type:"date"},
          PolicyStartPeriod: {type:"date"},
          PolicyEndPeriod: {type:"date"},
              
       }
       }
    },
    },
    
    filterable:true,
    sortable: true,
    groupable: true,
    pageable: true,
    excelExport: function(e) {
 // Add header 
 var rows = e.workbook.sheets[0].rows;
    rows.unshift({
    	cells: [ { value: "Claim", background: "#ff0000", colSpan: 3, textAlign: "center" },
                {  value: "Policy Information", background: "#ff0000", colSpan: 7, textAlign: "center"},
                {value: "Assignment", background: "#ff0000", colSpan: 4, textAlign: "center" }
             
             ]
    });
    //End Header

   
        
    
    var sheet = e.workbook.sheets[0];
     sheet.frozenRows = 3;
   
   sheet.mergedCells = ["A1:O1"];
   /* //row color 
    //var sheet = e.workbook.sheets[0];  // This is duplicate if rows color need to be enabled again.
    for (var rowIndex = 1; rowIndex < sheet.rows.length; rowIndex++) {
            if (rowIndex % 2 == 0) {
              var row = sheet.rows[rowIndex];
              for (var cellIndex = 0; cellIndex < row.cells.length; cellIndex ++) {
                row.cells[cellIndex].background = "#aabbcc";
              }
            }
          }*/
    
          var myHeaders = [{
                    value:"Beazley-TMB-Closed QUATERLY UPDATES",
                    fontSize: 30,
                    textAlign: "center",
                    //background:"#60b5ff",
                    color:"#391849",
                    
                  }];
                  sheet.rows.splice(0, 0, { cells: myHeaders, type: "header", height: 70});
    
    //end
        e.preventDefault();
  
        promises[3].resolve(e.workbook);
      },
    batch:true,
    navigatable:true,
    selectable: true,
    columns : [
        
        
        
    {
     field: "ID",
     title: "SharePoint ID",
     hidden: true,
},
    
    
            {
            field:"Claim",
            title:"Assured",
            width: 75
            },
            {
                field: "Claimant",
                title:"Claimant",
                width: 75
            },
            {
             field:"ClaimNumber",
             title:"Claim Number",
             width: 75
            },
            {
              field:"PolicyNumber",
              title:"Policy Number",
              width: 75
            },
            
            {
                field:"PolicyStartPeriod",
                title: "PolicyStartDate",
                width: 75
            },
            {
                field:"PolicyEndPeriod",
                title:"PolicyEndDate",
                width: 75
            },
            {
        field: "Limit",
        title: "Limit",
        width: 75
        
    },
    {
    field: "ULLimit",
    title: "UL/Limit",
    width: 75
    
    },
    {
        field:"Retention",
        title:"Retention",
        width: 75
    },
    {
      field: "Division",
      title: "Division",
      width: 75
    },
    { 
            field:"Partner.FirstName",
            title:"WR Sr.Partner",
            width: 75
    }, 
 
{ 
            field:"Associate.FirstName",
            title:"WR/Associate"
}, 

{
            field: "Title",
            title: "WR Matter Number",
            width: 75
},
{
    field:"ClaimManager",
    title:"ClaimManager",
    width: 75
},
{
    field:"ClaimSummary",
    title:"Claim Summary",
    hidden: true
},
{
    field:"ClosureDate",
    title:"ClosureDate",
},

    ],
    });
    
    }
    catch(e){
    alert(e.message);
    }
    
    }
    function myErrHandler(data, errMessage) {    
    alert("Error: " + errMessage);    
    }
    tabstrip.one("activate", function() {
        grid3.resize();
      });
    }
</script>
</body>
</html>